//go:build ignore
// +build ignore

package main

import (
	"bufio"
	"bytes"
	"encoding/json"
	"go/format"
	"log"
	"os"
	"strconv"
	"strings"
)

import (
	"text/template"
)

func main() {
	optionFile, _ := os.Open("data/button_mappings")

	sc := bufio.NewScanner(optionFile)
	mappings := map[string]int{}

	for sc.Scan() {
		values := strings.Split(sc.Text(), "=")

		buttonValue, err := strconv.Atoi(values[1])
		if err != nil {
			log.Fatal(err)
		}

		mappings[values[0]] = buttonValue

	}

	RunTemplate(buttonPressTemplate, "buttonPress.go", mappings)

	RunTemplate(buttonsTemplate, "buttons/buttons.go", mappings)

	d, _ := os.Open("data/custom_events.json")
	var customEvents []CustomEvent
	json.NewDecoder(d).Decode(&customEvents)

	RunTemplate(CustomEventsTemplate, "customEvents.go", customEvents)
}

func RunTemplate(t *template.Template, fileName string, data any) {
	var buf bytes.Buffer

	t.Execute(&buf, data)

	p, _ := format.Source(buf.Bytes())

	file, _ := os.Create(fileName)

	file.Write(p)
}

type CustomEvent struct {
	Name   string `json:"Name"`
	Press  string `json:"Press"`
	Params string `json:"Params"`
}

var buttonsTemplate = template.Must(template.New("").Parse(`// Code generated by go generate; DO NOT EDIT.
package Buttons

const (
{{- range $key, $value := . }}
	{{$key}} = {{$value}}
{{- end }}
)`))

var buttonPressTemplate = template.Must(template.New("").Parse(`// Code generated by go generate; DO NOT EDIT.
package HotRemote

import "github.com/yakiroren/hotremote/buttons"

{{- range $key, $value := . }}

func (s *Session) Press{{$key}}() {
	s.Press(Buttons.{{$key}})
}

{{- end }}
`))

var CustomEventsTemplate = template.Must(template.New("").Parse(`// Code generated by go generate; DO NOT EDIT.
package HotRemote

{{- range . }}

func (s *Session) Open{{.Name}}() {
	s.client.CustomEvent(s.targetBox, "{{.Press}}", "{{.Params}}")
}

{{- end }}
`))
